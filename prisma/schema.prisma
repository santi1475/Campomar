generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}


model empleados {
  EmpleadoID     Int           @id @default(autoincrement())
  Nombre         String?       @db.VarChar(100)
  TipoEmpleadoID Int?
  DNI            String?       @unique @db.Char(8)
  Password       String?       @db.VarChar(255)
  Activo         Boolean?      @default(true)
  tipoempleado   tipoempleado? @relation(fields: [TipoEmpleadoID], references: [TipoEmpleadoID], onDelete: NoAction, onUpdate: NoAction, map: "empleados_ibfk_1")
  pedidos        pedidos[]
}

model pedidos {
  PedidoID       Int              @id @default(autoincrement())
  EmpleadoID     Int
  Fecha          DateTime?        @default(now()) @db.Timestamptz(6)
  Total          Decimal          @db.Decimal(10, 2)
  Estado         Boolean          @default(true)
  TipoPago       Int?
  ParaLlevar     Boolean          @default(false)

  detallepedidos detallepedidos[]
  pedido_mesas   pedido_mesas[]
  empleados      empleados        @relation(fields: [EmpleadoID], references: [EmpleadoID], onDelete: NoAction, onUpdate: NoAction)
  tipopago       tipopago?        @relation(fields: [TipoPago], references: [TipoPagoID], onDelete: NoAction, onUpdate: NoAction)
  comandas_cocina  comandas_cocina[]
}

model platos {
  PlatoID        Int              @id @default(autoincrement())
  Descripcion    String?          @db.VarChar(255)
  Precio         Decimal?         @db.Decimal(10, 2)
  CategoriaID    Int
  Activo         Boolean?         @default(true)
  PrecioLlevar   Decimal?         @default(0.00)
  detallepedidos detallepedidos[]
  categorias     categorias       @relation(fields: [CategoriaID], references: [CategoriaID], onDelete: NoAction, onUpdate: NoAction)
}

model tipoempleado {
  TipoEmpleadoID Int         @id @default(autoincrement())
  Descripcion    String?     @db.VarChar(50)
  Activo         Boolean?    @default(true)
  empleados      empleados[]
}

model mesas {
  MesaID       Int            @id @default(autoincrement())
  NumeroMesa   Int
  Estado       String         @default("Libre") @db.VarChar(10)
  Activo       Boolean?       @default(true)
  pedido_mesas pedido_mesas[]
}

model pedido_mesas {
  PedidoMesaID Int      @id @default(autoincrement())
  PedidoID     Int?
  MesaID       Int?
  Activo       Boolean? @default(true)
  mesas        mesas?   @relation(fields: [MesaID], references: [MesaID], onDelete: NoAction, onUpdate: NoAction)
  pedidos      pedidos? @relation(fields: [PedidoID], references: [PedidoID], onDelete: NoAction, onUpdate: NoAction)
}

model detallepedidos {
  DetalleID Int      @id @default(autoincrement())
  PedidoID  Int
  PlatoID   Int
  Cantidad  Int
  Activo    Boolean? @default(true)
  Impreso   Boolean  @default(false)
  ParaLlevar Boolean  @default(false)
  pedidos   pedidos  @relation(fields: [PedidoID], references: [PedidoID], onDelete: NoAction, onUpdate: NoAction)
  platos    platos   @relation(fields: [PlatoID], references: [PlatoID], onDelete: NoAction, onUpdate: NoAction)
}

model categorias {
  CategoriaID Int      @id @default(autoincrement())
  Descripcion String   @db.VarChar(255)
  Activo      Boolean? @default(true)
  platos      platos[]
}

model tipopago {
  TipoPagoID  Int       @id @default(autoincrement())
  Descripcion String?   @db.VarChar(45)
  Activo      Boolean?  @default(true)
  pedidos     pedidos[]
}

model comandas_cocina {
  ComandaID        Int       @id @default(autoincrement())
  PedidoID         Int
  Comentario       String?   @db.Text
  EstadoImpresion  String    @default("pendiente") @db.VarChar(20)
  FechaCreacion    DateTime  @default(now()) @db.Timestamptz(6)
  
  pedido           pedidos   @relation(fields: [PedidoID], references: [PedidoID])
}
