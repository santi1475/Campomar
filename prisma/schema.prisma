generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model auditoria {
  AuditoriaID   Int       @id @default(autoincrement())
  Operacion     String?   @db.VarChar(10)
  TablaAfectada String?   @db.VarChar(50)
  IDAfectado    Int?
  Fecha         DateTime? @default(now()) @db.Timestamp(0)
  Usuario       String?   @db.VarChar(50)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model empleados {
  EmpleadoID     Int           @id @default(autoincrement())
  Nombre         String?       @db.VarChar(100)
  TipoEmpleadoID Int?
  DNI            String?       @unique(map: "DNI_UNIQUE") @db.Char(8)
  Password       String?       @db.VarChar(255)
  tipoempleado   tipoempleado? @relation(fields: [TipoEmpleadoID], references: [TipoEmpleadoID], onDelete: NoAction, onUpdate: NoAction, map: "empleados_ibfk_1")
  pedidos        pedidos[]

  @@index([TipoEmpleadoID], map: "TipoEmpleadoID")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model pedidos {
  PedidoID       Int              @id @default(autoincrement())
  EmpleadoID     Int
  Fecha          DateTime         @db.DateTime(0)
  Total          Decimal          @db.Decimal(10, 2)
  Estado         Boolean          @default(dbgenerated("b'1'")) @db.Bit(1)
  TipoPago       Int?
  detallepedidos detallepedidos[]
  pedido_mesas   pedido_mesas[]
  empleados      empleados        @relation(fields: [EmpleadoID], references: [EmpleadoID], onDelete: NoAction, onUpdate: NoAction, map: "pedidos_ibfk_1")
  tipopago       tipopago?        @relation(fields: [TipoPago], references: [TipoPagoID], onDelete: NoAction, onUpdate: NoAction, map: "Fk_TipoPago")

  @@index([EmpleadoID], map: "FK_EmpleadoPedido")
  @@index([TipoPago], map: "Fk_TipoPago_idx")
}

model platos {
  PlatoID        Int              @id @default(autoincrement())
  Descripcion    String?          @db.VarChar(255)
  Precio         Decimal?         @db.Decimal(10, 2)
  CategoriaID    Int
  detallepedidos detallepedidos[]
  categorias     categorias       @relation(fields: [CategoriaID], references: [CategoriaID], onDelete: NoAction, onUpdate: NoAction, map: "FK_CategoriaID")

  @@index([CategoriaID], map: "FK_CategoriaID_idx")
}

model tipoempleado {
  TipoEmpleadoID Int         @id @default(autoincrement())
  Descripcion    String?     @db.VarChar(50)
  empleados      empleados[]
}

model mesas {
  MesaID       Int            @id @default(autoincrement())
  NumeroMesa   Int
  Estado       String         @default("Libre") @db.VarChar(10)
  pedido_mesas pedido_mesas[]
}

model detallepedidos {
  DetalleID Int     @id @default(autoincrement())
  PedidoID  Int
  PlatoID   Int
  Cantidad  Int
  pedidos   pedidos @relation(fields: [PedidoID], references: [PedidoID], onDelete: NoAction, onUpdate: NoAction, map: "FK_PedidoDetalle")
  platos    platos  @relation(fields: [PlatoID], references: [PlatoID], onDelete: NoAction, onUpdate: NoAction, map: "FK_PlatoDetalle")

  @@index([PedidoID], map: "FK_PedidoDetalle")
  @@index([PlatoID], map: "FK_PlatoDetalle")
}

model categorias {
  CategoriaID Int      @id @default(autoincrement())
  Descripcion String   @db.VarChar(255)
  platos      platos[]
}

model pedido_mesas {
  PedidoMesaID Int      @id @default(autoincrement())
  PedidoID     Int?
  MesaID       Int?
  pedidos      pedidos? @relation(fields: [PedidoID], references: [PedidoID], onDelete: NoAction, onUpdate: NoAction, map: "pedido_mesas_ibfk_1")
  mesas        mesas?   @relation(fields: [MesaID], references: [MesaID], onDelete: NoAction, onUpdate: NoAction, map: "pedido_mesas_ibfk_2")

  @@index([MesaID], map: "MesaID")
  @@index([PedidoID], map: "PedidoID")
}

model tipopago {
  TipoPagoID  Int       @id @default(autoincrement())
  Descripcion String?   @db.VarChar(45)
  pedidos     pedidos[]
}